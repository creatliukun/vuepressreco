import{_ as a,c as s,e as n,o as i}from"./app-DI12VYZR.js";const l={};function t(r,e){return i(),s("div",null,e[0]||(e[0]=[n(`<h1 id="打包优化" tabindex="-1"><a class="header-anchor" href="#打包优化"><span>打包优化</span></a></h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>公司想做一个纯净版本的底座，考虑到快速开发，不想在从0开始，前后端公用一套逻辑。之前研究的是jeecg，但是老板决定家在缓慢，想换一个，所以又研究了vben，但是vben虽然快，但是项目潜逃太深，导致学习成本很高。所以又换回来了jeecg，现在就是要优化jeecg</p><h3 id="jeecgboot-vue3" tabindex="-1"><a class="header-anchor" href="#jeecgboot-vue3"><span>jeecgboot-vue3</span></a></h3><p>前端项目，采用 Vue3.0+TypeScript+Vite6+Ant-Design-Vue等新技术方案，包括二次封装组件、utils、hooks、动态菜单、权限校验、按钮级别权限控制等功能。</p><h3 id="前端技术栈" tabindex="-1"><a class="header-anchor" href="#前端技术栈"><span>前端技术栈</span></a></h3><ul><li>前端IDE建议：WebStorm、Vscode</li><li>最新技术栈：Vue3.0 + TypeScript + Vite6 + ant-design-vue4 + pinia + echarts + unocss + vxe-table + qiankun + es6</li><li>依赖管理：node、npm、pnpm</li></ul><h3 id="环境要求" tabindex="-1"><a class="header-anchor" href="#环境要求"><span>环境要求</span></a></h3><ul><li>本地环境安装 Node.js 、npm 、pnpm</li><li>pnpm 要求9+ 版本以上</li><li>Node.js 版本建议v20.15.0，要求Node 20+ 版本以上 ( 因为Vite6 需要 Node.js 18 / 20+ )</li></ul><h3 id="代码没优化时打包的体积" tabindex="-1"><a class="header-anchor" href="#代码没优化时打包的体积"><span>代码没优化时打包的体积</span></a></h3><p>25.1兆 主要文件： assets： 7.1 MB js：17.2 MB resource：781 KB _app.config.js： 638 字节 favicon.ico： 430 字节 index.html：3 KB logo.png：8 KB</p><p>从上面可以看出，主要优化的部分是assets文件夹、js文件夹；就是打包的时候先降低体积 降低体积的方案</p><h3 id="思路" tabindex="-1"><a class="header-anchor" href="#思路"><span>思路</span></a></h3><p>目前都是在网络上找到的一些方案，先把方案写了，然后进行测试。</p><ul><li>1， 开启Nginx压缩</li><li>2， 移除不需要的库</li></ul><h3 id="mac电脑查找自己的ssh的key" tabindex="-1"><a class="header-anchor" href="#mac电脑查找自己的ssh的key"><span>mac电脑查找自己的ssh的key</span></a></h3><p>在Mac电脑上查找SSH密钥，你通常会用到ssh-keygen命令来生成或管理密钥。如果你只是想查看现有的SSH密钥，你可以按照以下步骤操作：</p><h4 id="_1-查找ssh密钥的位置" tabindex="-1"><a class="header-anchor" href="#_1-查找ssh密钥的位置"><span>1. 查找SSH密钥的位置</span></a></h4><p>默认情况下，ssh-keygen命令会生成密钥对在用户的主目录下的.ssh文件夹中。密钥文件通常名为id_rsa（私钥）和id_rsa.pub（公钥）。你可以使用以下命令来查找这些文件：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> ~/.ssh</span>
<span class="line"><span class="token function">ls</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这将列出.ssh目录中的所有文件，你应该能够看到id_rsa和id_rsa.pub文件（如果它们存在的话）。</li></ul><h4 id="_2-查看公钥内容" tabindex="-1"><a class="header-anchor" href="#_2-查看公钥内容"><span>2. 查看公钥内容</span></a></h4><ul><li>要查看公钥的内容，可以使用cat命令：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> id_rsa.pub</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_3-查看私钥内容-不推荐" tabindex="-1"><a class="header-anchor" href="#_3-查看私钥内容-不推荐"><span>3. 查看私钥内容（不推荐）</span></a></h4><p>查看私钥的内容通常不是一个好主意，因为私钥应该保密，不应随意展示。如果你需要查看私钥的开头部分以确认其存在，可以使用如下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">head</span> id_rsa</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_4-生成新的ssh密钥-如果需要" tabindex="-1"><a class="header-anchor" href="#_4-生成新的ssh密钥-如果需要"><span>4. 生成新的SSH密钥（如果需要）</span></a></h4><ul><li>如果你还没有SSH密钥或者想要生成新的密钥，可以使用以下命令：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-b</span> <span class="token number">4096</span> <span class="token parameter variable">-C</span> <span class="token string">&quot;your_email@example.com&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里，-t rsa指定密钥类型为RSA，-b 4096指定密钥长度为4096位，-C &quot;your_email@example.com&quot;是一个注释，用于标识这个密钥。执行这个命令后，系统会提示你输入密钥的保存位置和密码（可选）。</p><h4 id="_5-复制公钥到剪贴板-如果需要" tabindex="-1"><a class="header-anchor" href="#_5-复制公钥到剪贴板-如果需要"><span>5. 复制公钥到剪贴板（如果需要）</span></a></h4><p>如果你需要将公钥复制到剪贴板以便粘贴到GitHub、GitLab或其他服务上，可以使用：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">pbcopy <span class="token operator">&lt;</span> id_rsa.pub</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者直接使用：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> id_rsa.pub <span class="token operator">|</span> pbcopy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>以上就是在Mac电脑上查找和管理SSH密钥的方法。确保妥善保管你的私钥，不要轻易泄露。</p>`,37)]))}const c=a(l,[["render",t]]),p=JSON.parse('{"path":"/blogs/category/2025/04102349.html","title":"jeecg代码打包优化","lang":"en-US","frontmatter":{"title":"jeecg代码打包优化","date":"2025-04-10T00:00:00.000Z","tags":["note"],"categories":["category"]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[{"level":3,"title":"jeecgboot-vue3","slug":"jeecgboot-vue3","link":"#jeecgboot-vue3","children":[]},{"level":3,"title":"前端技术栈","slug":"前端技术栈","link":"#前端技术栈","children":[]},{"level":3,"title":"环境要求","slug":"环境要求","link":"#环境要求","children":[]},{"level":3,"title":"代码没优化时打包的体积","slug":"代码没优化时打包的体积","link":"#代码没优化时打包的体积","children":[]},{"level":3,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":3,"title":"mac电脑查找自己的ssh的key","slug":"mac电脑查找自己的ssh的key","link":"#mac电脑查找自己的ssh的key","children":[]}]}],"git":{"createdTime":1744387881000,"updatedTime":1744387881000,"contributors":[{"name":"creatliukun","email":"952476356@qq.com","commits":1}]},"filePathRelative":"blogs/category/2025/04102349.md"}');export{c as comp,p as data};
